
import 'package:flutter/material.dart';

void main() {
 runApp(MaterialApp(
   home: SafeArea(child: Scaffold(
     body: QuizPage(),
   )),
 ));
}
class Question{
 final String questionText;
 final bool answer;
Question({required this.questionText,required this.answer});
}
class Questions{
 List<Question> questionBank =[
   Question(questionText: "Question1",answer: true),
   Question(questionText: "Question2",answer: true),
   Question(questionText: "Question3",answer: false),
   Question(questionText: "Question4",answer: true),
   Question(questionText: "Question5",answer: false),
   Question(questionText: "Question6",answer: false),
   Question(questionText: "Question7",answer: false),
 ];
}
class QuizPage extends StatefulWidget {

 const QuizPage({Key? key}) : super(key: key);

 @override
 _QuizPageState createState() => _QuizPageState();
}

class _QuizPageState extends State<QuizPage> {
 int questionNumber=0;
 int currentScore = 0;
 Questions questions = Questions();
 void updateQuestionNumber(){
   setState(() {
     questionNumber++;
     print("$questionNumber");
   });
 }
 void updateCurrentScore(bool choice,int question_number){
   if(questions.questionBank.length == question_number){
     print("End of quiz");
   }
   else{
     if(questions.questionBank[question_number].answer == choice){
       setState(() {
         currentScore++;
       });
     }
   }
 }
 bool checkquestionNumber(int questionNumber){
   return questionNumber < questions.questionBank.length ? true:false;
 }
 @override
 Widget build(BuildContext context) {
   return Container(
     child: Column(
       children: [
         Center(
           child: Text("Questions",style:TextStyle(fontSize: 40.0)),
         ),
         SizedBox(height: 20.0),
         ElevatedButton(onPressed:(){
           setState(() {
             if(questionNumber == questions.questionBank.length){
               print("End of questions");
             }
             else{
               updateCurrentScore(true, questionNumber);
               updateQuestionNumber();
             }
           });
         }
         , child: Text("True"),),
         SizedBox(width: 20.0),
         ElevatedButton(onPressed: (){
           if(questionNumber == questions.questionBank.length){
             print("End of questions");
           }
           else{
             updateCurrentScore(false, questionNumber);
             updateQuestionNumber();
           }
         }, child: Text("False")),
         SizedBox(height: 100.0,),
         SizedBox(height:50.0),
         Padding(
           padding: const EdgeInsets.all(30.0),
           child: Center(
             child: Text(
               "Current Score is:",
               style: TextStyle(fontSize: 30),
             ),
           ),
         ),
         Padding(padding: const EdgeInsets.all(30.0),
         child: Center(
           child: Text(
             '${currentScore}',
             style: TextStyle(fontSize: 30),
           ),
         ),
         ),
       ],
     ),
   );
 }
}
